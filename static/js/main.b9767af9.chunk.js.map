{"version":3,"sources":["constants/actionTypes.js","actions/cartActions.js","components/header/header.js","components/addItems/addItem.js","components/items/item/item.js","components/items/items.js","App.js","reportWebVitals.js","reducers/cartReducer.js","store/userStore.js","index.js"],"names":["TYPES","cartActions","data","type","payload","Header","props","dispatch","useDispatch","searchString","useSelector","state","cart","className","placeholder","value","onChange","e","target","AddItem","useState","title","setTitle","description","setDescription","Dialog","open","aria-labelledby","DialogTitle","style","color","id","DialogContent","DialogContentText","DialogActions","Button","variant","onClick","setOpen","Item","Card","Body","Title","item","Text","Items","showModal","setShowModal","filteredCart","console","log","length","filter","cartItem","toUpperCase","indexOf","padding","fontSize","float","display","flexWrap","marginLeft","map","App","backgroundColor","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","cartReducer","action","rootReducer","combineReducers","persistConfig","key","storage","whitelist","pReducers","persistReducer","store","createStore","applyMiddleware","thunk","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9767af9.chunk.js","sourcesContent":["export const TYPES = {\r\n  SET_SEARCH_STRING: \"SET_SEARCH_STRING\",\r\n  ADD_CART_ITEMS: \"ADD_CART_ITEMS\",\r\n};\r\n","import { TYPES } from \"../constants/actionTypes\";\r\n\r\nexport const cartActions = {\r\n  setSearchString: (data) => ({ type: TYPES.SET_SEARCH_STRING, payload: data }),\r\n  addCartItems: (data) => ({ type: TYPES.ADD_CART_ITEMS, payload: data }),\r\n};\r\n","import React from \"react\";\r\nimport \"./header.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { cartActions } from \"../../actions/cartActions\";\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  const searchString = useSelector((state) => state.cart.searchString);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <input\r\n        className=\"search\"\r\n        placeholder=\"Search\"\r\n        value={searchString}\r\n        onChange={(e) => dispatch(cartActions.setSearchString(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport \"./addItem.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cartActions } from \"../../actions/cartActions\";\r\n\r\nfunction AddItem(props) {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Dialog open={props.open} aria-labelledby=\"draggable-dialog-title\">\r\n      <DialogTitle style={{ color: \"blue\" }} id=\"draggable-dialog-title\">\r\n        Add the Items\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Enter the title\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n\r\n          <input\r\n            className=\"input\"\r\n            placeholder=\"Enter the Description\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => props.setOpen(false)}\r\n          color=\"primary\"\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            dispatch(\r\n              cartActions.addCartItems({\r\n                title: title,\r\n                description: description,\r\n              })\r\n            );\r\n            props.setOpen(false);\r\n          }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n        >\r\n          ADD\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddItem;\r\n","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"./item.css\";\r\n\r\nfunction Item(props) {\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Card.Title style={{ color: \"blue\" }}>{props.item.title}</Card.Title>\r\n        <Card.Text>{props.item.description}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import React, { useState } from \"react\";\r\nimport \"./items.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport AddItem from \"../addItems/addItem\";\r\nimport Item from \"./item/item\";\r\n\r\nfunction Items(props) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const cart = useSelector((state) => state.cart.cart);\r\n  const searchString = useSelector((state) => state.cart.searchString);\r\n\r\n  let filteredCart = cart;\r\n  console.log(filteredCart);\r\n  if (searchString.length) {\r\n    filteredCart = filteredCart.filter(\r\n      (cartItem) =>\r\n        cartItem.title.toUpperCase().indexOf(searchString.toUpperCase()) >= 0 ||\r\n        cartItem.description\r\n          .toUpperCase()\r\n          .indexOf(searchString.toUpperCase()) >= 0\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"containers\">\r\n      <div className=\"divClass\">\r\n        <div style={{ padding: \"10px\" }}>\r\n          <AddIcon\r\n            style={{ color: \"blue\", fontSize: \"60\", float: \"right\" }}\r\n            onClick={() => {\r\n              setShowModal(true);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        {showModal && <AddItem open={showModal} setOpen={setShowModal} />}\r\n\r\n        <h3>ITEMS</h3>\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", marginLeft: \"10px\" }}>\r\n          {filteredCart.map((item) => (\r\n            <Item item={item} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Items;\r\n","import Header from \"./components/header/header\";\nimport Items from \"./components/items/items\";\n\nfunction App() {\n  return (\n    <div style={{ backgroundColor: \"#D0D0D0\", height: \"100%\" }}>\n      <Header />\n      <Items />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { TYPES } from \"../constants/actionTypes\";\r\n\r\nconst initialState = {\r\n  searchString: \"\",\r\n  cart: [\r\n    {\r\n      title: \"Title-1\",\r\n      description: \"description-1\",\r\n    },\r\n    {\r\n      title: \"Title-2\",\r\n      description: \"description-2\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.SET_SEARCH_STRING:\r\n      return { ...state, searchString: action.payload };\r\n    case TYPES.ADD_CART_ITEMS:\r\n      return { ...state, cart: [...state.cart, action.payload] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cartReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport cart from \"../reducers/cartReducer\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst rootReducer = combineReducers({\r\n  cart,\r\n});\r\n\r\nconst persistConfig = { key: \"cart\", storage: storage, whitelist: [\"cart\"] };\r\nconst pReducers = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = createStore(pReducers, applyMiddleware(thunk));\r\nconst persistor = persistStore(store);\r\n\r\nexport { persistor, store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/userStore\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}